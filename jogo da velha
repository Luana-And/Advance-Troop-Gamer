int[][] tabuleiro = new int[3][3]; // 0 = vazio, 1 = X, 2 = O
boolean jogadorX = true; // Se true, é a vez do jogador X, senão, é a vez da máquina (O)
boolean jogoAtivo = true;
int tamanhoCelula = 166;
int vencedor = 0;
boolean contraMaquina = false; // Se true, joga contra a máquina

void setup() {
  size(500, 550);
  reiniciarJogo();
}

void draw() {
  background(255);
  desenharGrade();
  desenharSimbolos();
  exibirModoJogo();
  if (!jogoAtivo) {
    exibirResultado();
  }
}

void reiniciarJogo() {
  for (int i = 0; i < 3; i++) {
    for (int j = 0; j < 3; j++) {
      tabuleiro[i][j] = 0;
    }
  }
  jogadorX = true;
  jogoAtivo = true;
  vencedor = 0;
}

void desenharGrade() {
  stroke(0);
  strokeWeight(4);
  for (int i = 1; i < 3; i++) {
    line(i * tamanhoCelula, 0, i * tamanhoCelula, 500);
    line(0, i * tamanhoCelula, 500, i * tamanhoCelula);
  }
}

void desenharSimbolos() {
  for (int i = 0; i < 3; i++) {
    for (int j = 0; j < 3; j++) {
      int x = j * tamanhoCelula + tamanhoCelula / 2;
      int y = i * tamanhoCelula + tamanhoCelula / 2;
      if (tabuleiro[i][j] == 1) {
        desenharX(x, y);
      } else if (tabuleiro[i][j] == 2) {
        desenharO(x, y);
      }
    }
  }
}

void desenharX(int x, int y) {
  stroke(0, 128, 10);
  strokeWeight(6);
  int d = tamanhoCelula / 2 - 20;
  line(x - d, y - d, x + d, y + d);
  line(x + d, y - d, x - d, y + d);
}

void desenharO(int x, int y) {
  stroke(0, 4, 255);
  strokeWeight(6);
  noFill();
  ellipse(x, y, tamanhoCelula - 40, tamanhoCelula - 40);
}

void mousePressed() {
  if (!jogoAtivo) {
    reiniciarJogo();
    return;
  }
  
  if (mouseY > 500) {
    contraMaquina = !contraMaquina;
    reiniciarJogo();
    return;
  }
  
  int coluna = mouseX / tamanhoCelula;
  int linha = mouseY / tamanhoCelula;

  if (tabuleiro[linha][coluna] == 0) {
    tabuleiro[linha][coluna] = jogadorX ? 1 : 2;
    verificarVitoria();
    if (jogoAtivo) {
      jogadorX = !jogadorX;
      if (contraMaquina && !jogadorX) {
        jogadaMaquina();
      }
    }
  }
}

void jogadaMaquina() {
  delay(500); // Pequeno atraso para parecer mais natural
  int linha, coluna;
  do {
    linha = int(random(3));
    coluna = int(random(3));
  } while (tabuleiro[linha][coluna] != 0);

  tabuleiro[linha][coluna] = 2;
  verificarVitoria();
  jogadorX = true;
}

void verificarVitoria() {
  for (int i = 0; i < 3; i++) {
    if (tabuleiro[i][0] != 0 && tabuleiro[i][0] == tabuleiro[i][1] && tabuleiro[i][1] == tabuleiro[i][2]) {
      vencedor = tabuleiro[i][0];
      jogoAtivo = false;
      return;
    }
    if (tabuleiro[0][i] != 0 && tabuleiro[0][i] == tabuleiro[1][i] && tabuleiro[1][i] == tabuleiro[2][i]) {
      vencedor = tabuleiro[0][i];
      jogoAtivo = false;
      return;
    }
  }
  if (tabuleiro[0][0] != 0 && tabuleiro[0][0] == tabuleiro[1][1] && tabuleiro[1][1] == tabuleiro[2][2]) {
    vencedor = tabuleiro[0][0];
    jogoAtivo = false;
    return;
  }
  if (tabuleiro[0][2] != 0 && tabuleiro[0][2] == tabuleiro[1][1] && tabuleiro[1][1] == tabuleiro[2][0]) {
    vencedor = tabuleiro[0][2];
    jogoAtivo = false;
    return;
  }
  boolean empate = true;
  for (int i = 0; i < 3; i++) {
    for (int j = 0; j < 3; j++) {
      if (tabuleiro[i][j] == 0) {
        empate = false;
        break;
      }
    }
  }
  if (empate) {
    jogoAtivo = false;
  }
}

void exibirResultado() {
  textAlign(CENTER, CENTER);
  textSize(32);
  fill(0);
  if (vencedor == 1) {
    text("Jogador X Venceu!", width/2, height/2);
  } else if (vencedor == 2) {
    text("Jogador O Venceu!", width/2, height/2);
  } else {
    text("Empate!", width/2, height/2);
  }
  textSize(20);
  text("Clique para reiniciar", width/2, height/2 + 40);
}

void exibirModoJogo() {
  fill(200);
  rect(0, 500, width, 50);
  fill(0);
  textSize(20);
  textAlign(CENTER, CENTER);
  text(contraMaquina ? "Modo: Contra Máquina" : "Modo: Dois Jogadores", width / 2, 525);
}
