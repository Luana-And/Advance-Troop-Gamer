Player player;
ArrayList<Enemy> enemies;
ArrayList<Bullet> playerBullets;
ArrayList<Bullet> enemyBullets;

PImage playerImg, enemyImg;
PFont font;

int score = 0;
int lives = 3;
int shootCooldown = 0;
boolean gameOver = false;

int spawnTimer = 0;
float enemySpeed = 0.5;
float shootChance = 0.001;

void setup() {
  size(800, 600);
  font = createFont("Arial", 16);
  textFont(font);

  playerImg = createImage(40, 40, RGB);
  enemyImg = createImage(30, 30, RGB);
  playerImg.loadPixels();
  enemyImg.loadPixels();
  for (int i = 0; i < playerImg.pixels.length; i++) playerImg.pixels[i] = color(0, 255, 0);
  for (int i = 0; i < enemyImg.pixels.length; i++) enemyImg.pixels[i] = color(255, 0, 0);
  playerImg.updatePixels();
  enemyImg.updatePixels();

  startGame();
}

void draw() {
  background(0);
  fill(255);
  textSize(16);
  text("Pontuação: " + score, 10, 20);
  text("Vidas: " + lives, width - 100, 20);

  if (!gameOver) {
    player.update();
    player.display();

    // Spawn de inimigos
    spawnTimer--;
    if (spawnTimer <= 0) {
      enemies.add(new Enemy(random(0, width - 30), -40, enemyImg, enemySpeed, shootChance));
      spawnTimer = 60;
    }

    // Dificuldade aumenta com o tempo
    if (frameCount % 600 == 0) {
      enemySpeed += 0.1;
      shootChance += 0.0002;
    }

    // Player bullets
    for (int i = playerBullets.size() - 1; i >= 0; i--) {
      Bullet b = playerBullets.get(i);
      b.update();
      b.display();
      for (int j = enemies.size() - 1; j >= 0; j--) {
        Enemy e = enemies.get(j);
        if (b.hits(e)) {
          enemies.remove(j);
          playerBullets.remove(i);
          score += 10;
          break;
        }
      }
    }

    // Enemy bullets
    for (int i = enemyBullets.size() - 1; i >= 0; i--) {
      Bullet b = enemyBullets.get(i);
      b.update();
      b.display();
      if (b.hits(player)) {
        enemyBullets.remove(i);
        lives--;
        if (lives <= 0) gameOver = true;
      }
    }

    // Enemies
    for (int i = enemies.size() - 1; i >= 0; i--) {
      Enemy e = enemies.get(i);
      e.update();
      e.display();
      if (e.y > height) {
        gameOver = true;
      }
    }

    shootCooldown = max(0, shootCooldown - 1);
  } else {
    textAlign(CENTER);
    textSize(32);
    fill(255, 0, 0);
    text("Game Over", width / 2, height / 2);
    textSize(16);
    fill(255);
    text("Pressione R para reiniciar", width / 2, height / 2 + 30);
  }
}

void keyPressed() {
  if (!gameOver) {
    if (keyCode == LEFT) player.move(-1);
    else if (keyCode == RIGHT) player.move(1);
    else if (key == ' ' && shootCooldown == 0) {
      playerBullets.add(new Bullet(player.x + 20, player.y, -7));
      shootCooldown = 20;
    }
  }

  if (gameOver && (key == 'r' || key == 'R')) {
    startGame();
  }
}

void keyReleased() {
  if (keyCode == LEFT || keyCode == RIGHT) player.move(0);
}

void startGame() {
  player = new Player(width / 2 - 20, height - 60, playerImg);
  enemies = new ArrayList<Enemy>();
  playerBullets = new ArrayList<Bullet>();
  enemyBullets = new ArrayList<Bullet>();
  lives = 3;
  score = 0;
  shootCooldown = 0;
  gameOver = false;
  enemySpeed = 0.5;
  shootChance = 0.001;
  spawnTimer = 60;
}

// ----------------------- CLASSES -----------------------

class Player {
  float x, y;
  float speed = 5;
  int direction = 0;
  PImage img;

  Player(float x, float y, PImage img) {
    this.x = x;
    this.y = y;
    this.img = img;
  }

  void move(int dir) {
    direction = dir;
  }

  void update() {
    x += direction * speed;
    x = constrain(x, 0, width - 40);
  }

  void display() {
    image(img, x, y, 40, 40);
  }
}

class Enemy {
  float x, y;
  float speed;
  float shootChance;
  PImage img;

  Enemy(float x, float y, PImage img, float speed, float shootChance) {
    this.x = x;
    this.y = y;
    this.img = img;
    this.speed = speed;
    this.shootChance = shootChance;
  }

  void update() {
    y += speed;
    if (random(1) < shootChance) {
      enemyBullets.add(new Bullet(x + 15, y + 30, 4));
    }
  }

  void display() {
    image(img, x, y, 30, 30);
  }
}

class Bullet {
  float x, y, speed;

  Bullet(float x, float y, float speed) {
    this.x = x;
    this.y = y;
    this.speed = speed;
  }

  void update() {
    y += speed;
  }

  void display() {
    fill(255, 255, 0);
    rect(x, y, 5, 10);
  }

  boolean hits(Player p) {
    return x > p.x && x < p.x + 40 && y > p.y && y < p.y + 40;
  }

  boolean hits(Enemy e) {
    return x > e.x && x < e.x + 30 && y > e.y && y < e.y + 30;
  }
}
